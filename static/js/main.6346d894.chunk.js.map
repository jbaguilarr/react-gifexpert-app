{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBW,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,e,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAgBtC,OATAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGjB,CAACpB,IAEGqB,EDXyBK,CAAa1B,GAAhCa,EAHsB,EAG3BN,KAH2B,EAGfa,QAyBpB,OACI,qCACI,6BAAKpB,IAEL,qBAAKgB,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,eEtCxBgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAQ9B,OACI,qCACG,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAES2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MChB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6346d894.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handlerInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"               \r\n                    value={inputValue}\r\n                    onChange={handlerInputChange} \r\n                />\r\n            </form>           \r\n        </>\r\n    )\r\n}","\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Rja70t30tA9cK1aWlrCcNm0NRqjrpEh2`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        }            \r\n    )\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data:images,loading } = useFetchGifs(category);\r\n    // useEffect(()=>{\r\n    //    getGifs(category).then(setImages);\r\n    // }, [category]);\r\n\r\n   /* const getGifs = async() => {\r\n        const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Rja70t30tA9cK1aWlrCcNm0NRqjrpEh2`;\r\n        const resp = await fetch (url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img =>{\r\n                return {\r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images?.downsized_medium.url\r\n                }\r\n            }            \r\n        )\r\n\r\n        console.log(gifs);\r\n        setImages(gifs);\r\n    }*/\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            \r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {                  \r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n       getGifs(category).then(imgs => {\r\n           setState({\r\n               data: imgs,\r\n               loading: false\r\n           });\r\n       })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One punch','SAmurai x','Dragon ball'];\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n   /* const handledAdd = () => {\r\n        setcategories([...categories,'HunterxHunter']);\r\n    }*/\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>\r\n           <hr/>\r\n           <AddCategory setCategories={setCategories} />\r\n           <ol>\r\n               { \r\n                    categories.map(category =>(\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                    ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}